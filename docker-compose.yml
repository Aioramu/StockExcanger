version: "3.9"

services:
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432"
    networks:
      - overlay
    container_name: stock-db
  web:
    restart: always
    image: web:1
    build:
      context: .
      dockerfile: ./Dockerfile
    command: bash -c "python manage.py makemigrations &&python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    networks:
      - overlay
    container_name: stock
  rabbitmq:
    restart: always
    image: rabbitmque
    build:
      context: .
      dockerfile: ./DockerfileRabbitMQ
    ports:
      - ${RABBIT_PORT}:${RABBIT_PORT}
      - ${RABBIT_MANAGMENT}:${RABBIT_MANAGMENT}
    networks:
      - overlay
    volumes:
      - ./myrabbit.conf:/etc/rabbitmq/rabbitmq.conf
  celery:
    image: web:1
    build: .
    container_name: 'stock-tasks'
    command: bash -c "celery -A stockex worker -l INFO --concurrency=8"
    ports:
      - "${CELERY_PORT}:${CELERY_PORT}"
    volumes:
      - .:/code
    restart: always
    environment:
      - TZ=Europe/Moscow
    networks:
      - overlay
  celery_beat:
    image: web:1
    build: .
    container_name: stockexcanger-celery_beat-1
    command: bash -c "celery -A celery_beat beat --loglevel=INFO"
    volumes:
      - .:/code
    networks:
      - overlay
networks:
  overlay:
